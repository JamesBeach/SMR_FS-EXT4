diff --git a/misc/mke2fs.c b/misc/mke2fs.c
index aeb852f..0ce842b 100644
--- a/misc/mke2fs.c
+++ b/misc/mke2fs.c
@@ -117,6 +117,8 @@ static int sys_page_size = 4096;
 
 static int errors_behavior = 0;
 
+static int zoned_block_device = 0;
+
 static void usage(void)
 {
 	fprintf(stderr, _("Usage: %s [-c|-l filename] [-b block-size] "
@@ -129,7 +131,8 @@ static void usage(void)
 	"[-M last-mounted-directory]\n\t[-O feature[,...]] "
 	"[-r fs-revision] [-E extended-option[,...]]\n"
 	"\t[-t fs-type] [-T usage-type ] [-U UUID] [-e errors_behavior]"
-	"[-jnqvDFKSV] device [blocks-count]\n"),
+	"[-jnqvDFKSV] device [blocks-count]\n"
+	"This version is ZBD/SMR compliant\n"),
 		program_name);
 	exit(1);
 }
@@ -702,6 +705,12 @@ static void show_stats(ext2_filsys fs)
 		printf(_("%u blocks per group, %u fragments per group\n"),
 		       s->s_blocks_per_group, s->s_clusters_per_group);
 	printf(_("%u inodes per group\n"), s->s_inodes_per_group);
+   
+	printf(_("Disk type: "));
+   if (s->s_disk_layout)
+      printf(_("%s\n"), (s->s_disk_layout & 0x0010) ? "Zoned " : ""); 
+   else
+      printf(_("%s\n"), (s->s_disk_layout & 0x0008) ? "SMR" : "Conventional");
 
 skip_details:
 	if (fs->group_desc_count == 1) {
@@ -878,6 +887,19 @@ static void parse_extended_opts(struct ext2_super_block *param,
 				packed_meta_blocks = 1;
 			if (packed_meta_blocks)
 				journal_location = 0;
+		} else if (strcmp(token, "ZBD") == 0) {
+			if (packed_meta_blocks != 1) {
+				fprintf(stderr, "%s",
+				_("The ZBD feature requires the use of Packed Meta Blocks. \n"));
+				r_usage++;
+				continue;
+			} else {
+			zoned_block_device = 1;
+			fs_param.s_log_block_size = 
+				int_log2(4096 >> EXT2_MIN_BLOCK_LOG_SIZE);
+			fs_param.s_disk_layout = 0x10;
+			printf("Set the ZBD bit: %x\n", fs_param.s_disk_layout);
+			}
 		} else if (strcmp(token, "stride") == 0) {
 			if (!arg) {
 				r_usage++;
@@ -1040,6 +1062,7 @@ static void parse_extended_opts(struct ext2_super_block *param,
 			"\toffset=<offset to create the file system>\n"
 			"\tresize=<resize maximum size in blocks>\n"
 			"\tpacked_meta_blocks=<0 to disable, 1 to enable>\n"
+			"\tZBD to enable ZBD in the EXT4 FS\n"
 			"\tlazy_itable_init=<0 to disable, 1 to enable>\n"
 			"\tlazy_journal_init=<0 to disable, 1 to enable>\n"
 			"\troot_uid=<uid of root directory>\n"
@@ -2708,7 +2731,7 @@ int main (int argc, char *argv[])
 	set_com_err_gettext(gettext);
 #endif
 	PRS(argc, argv);
-
+printf("Checking ZBD after opts:%x\n", fs_param.s_disk_layout);
 #ifdef CONFIG_TESTIO_DEBUG
 	if (getenv("TEST_IO_FLAGS") || getenv("TEST_IO_BLOCK")) {
 		io_ptr = test_io_manager;
@@ -2741,6 +2764,7 @@ int main (int argc, char *argv[])
 	if (!quiet)
 		flags |= EXT2_FLAG_PRINT_PROGRESS;
 	retval = ext2fs_initialize(device_name, flags, &fs_param, io_ptr, &fs);
+printf("Checking ZBD after fs init: %x\n", fs->super->s_disk_layout);
 	if (retval) {
 		com_err(device_name, retval, "%s",
 			_("while setting up superblock"));
