diff --git a/lib/ext2fs/ext2_fs.h b/lib/ext2fs/ext2_fs.h
index 10cb650..ac25e0a 100644
--- a/lib/ext2fs/ext2_fs.h
+++ b/lib/ext2fs/ext2_fs.h
@@ -189,7 +189,9 @@ struct ext4_group_desc
 	__u32	bg_exclude_bitmap_hi;	/* Exclude bitmap block MSB */
 	__u16	bg_block_bitmap_csum_hi;/* crc32c(s_uuid+grp_num+bitmap) MSB */
 	__u16	bg_inode_bitmap_csum_hi;/* crc32c(s_uuid+grp_num+bitmap) MSB */
-	__u32	bg_reserved;
+	__u8	bg_zone_type; /*ZBD zone type -- assumes bg aligned to zone*/
+	__u8	bg_zone_condition; /*ZBD zone condition*/
+	__u16	bg_reserved;
 };
 
 #define EXT4_BG_INODE_BITMAP_CSUM_HI_END	\
@@ -307,8 +309,7 @@ struct ext2_dx_tail {
 #define EXT2_DIRTY_FL			0x00000100
 #define EXT2_COMPRBLK_FL		0x00000200 /* One or more compressed clusters */
 #define EXT2_NOCOMPR_FL			0x00000400 /* Access raw compressed data */
-	/* nb: was previously EXT2_ECOMPR_FL */
-#define EXT4_ENCRYPT_FL			0x00000800 /* encrypted inode */
+#define EXT4_ENCRYPT_FL			0x00000800 /* Compression error */
 /* End compression flags --- maybe not all used */
 #define EXT2_BTREE_FL			0x00001000 /* btree format dir */
 #define EXT2_INDEX_FL			0x00001000 /* hash-indexed directory */
@@ -565,12 +566,6 @@ struct ext2_inode_large {
 /* Metadata checksum algorithms */
 #define EXT2_CRC32C_CHKSUM		1
 
-/* Encryption algorithms */
-#define EXT4_ENCRYPTION_MODE_INVALID		0
-#define EXT4_ENCRYPTION_MODE_AES_256_XTS	1
-#define EXT4_ENCRYPTION_MODE_AES_256_GCM	2
-#define EXT4_ENCRYPTION_MODE_AES_256_CBC	3
-
 /*
  * Structure of the super block
  */
@@ -682,13 +677,18 @@ struct ext2_super_block {
 	__u32	s_grp_quota_inum;	/* inode number of group quota file */
 	__u32	s_overhead_blocks;	/* overhead blocks/clusters in fs */
 	__u32	s_backup_bgs[2];	/* If sparse_super2 enabled */
-	__u8	s_encrypt_algos[4];	/* Encryption algorithms in use  */
-	__u32   s_reserved[105];        /* Padding to the end of the block */
+	__u8	s_encrypt_algos[4];	/* Encryption algorithms in use */
+	__u32	s_disk_layout;		/*Added for ZBD devices - SMR*/
+	__u32	s_reserved[105];  	/* Padding to the end of the block */
 	__u32	s_checksum;		/* crc32c(superblock) */
 };
 
 #define EXT4_S_ERR_LEN (EXT4_S_ERR_END - EXT4_S_ERR_START)
 
+#define EXT4_DISK_LAYOUT_CONVENTIONAL	0x0000
+#define EXT4_DISK_LAYOUT_SMR	0x0008
+#define EXT4_DISK_LAYOUT_ZBD	0x0010
+
 /*
  * Codes for operating systems
  */
@@ -770,7 +770,6 @@ struct ext2_super_block {
 #define EXT4_FEATURE_INCOMPAT_LARGEDIR		0x4000 /* >2GB or 3-lvl htree */
 #define EXT4_FEATURE_INCOMPAT_INLINE_DATA	0x8000 /* data in inode */
 #define EXT4_FEATURE_INCOMPAT_ENCRYPT		0x10000
-
 #define EXT2_FEATURE_COMPAT_SUPP	0
 #define EXT2_FEATURE_INCOMPAT_SUPP    (EXT2_FEATURE_INCOMPAT_FILETYPE| \
 				       EXT4_FEATURE_INCOMPAT_MMP)
@@ -779,6 +778,8 @@ struct ext2_super_block {
 					 EXT4_FEATURE_RO_COMPAT_DIR_NLINK| \
 					 EXT2_FEATURE_RO_COMPAT_BTREE_DIR)
 
+
+
 /*
  * Default values for user and/or group using reserved blocks
  */
@@ -878,9 +879,7 @@ struct ext2_dir_entry_tail {
 #define EXT2_DIR_ENTRY_HEADER_LEN	8
 #define EXT2_DIR_PAD			4
 #define EXT2_DIR_ROUND			(EXT2_DIR_PAD - 1)
-#define EXT2_DIR_REC_LEN(name_len)	(((name_len) + \
-					  EXT2_DIR_ENTRY_HEADER_LEN + \
-					  EXT2_DIR_ROUND) & \
+#define EXT2_DIR_REC_LEN(name_len)	(((name_len) + 8 + EXT2_DIR_ROUND) & \
 					 ~EXT2_DIR_ROUND)
 
 /*
@@ -944,4 +943,19 @@ struct mmp_struct {
  */
 #define EXT4_INLINE_DATA_DOTDOT_SIZE	(4)
 
+
+/*
+ * ZBD/SMR definitions
+ */
+#define EXT4_DRIVE_CONVENTIONAL	0x0000
+#define EXT4_DRIVE_FORWARD_WRITE	0x0001
+#define EXT4_DRIVE_ZONE_INFO		0x0002
+#define EXT4_DRIVE_ZONE_STRICT	0x0004
+
+#define EXT4_DRIVE_PMR EXT4_DRIVE_CONVENTIONAL
+#define EXT4_DRIVE_SMR EXT4_DRIVE_FORWARD_WRITE
+#define EXT4_DRIVE_SMR_DM EXT4_DRIVE_CONVENTIONAL
+#define EXT4_DRIVE_SMR_HA EXT4_DRIVE_FORWARD_WRITE | EXT4_DRIVE_ZONE_INFO
+#define EXT4_DRIVE_SMR_HM EXT4_DRIVE_FORWARD_WRITE | EXT4_DRIVE_ZONE_INFO | EXT4_DRIVE_ZONE_STRICT
+
 #endif	/* _LINUX_EXT2_FS_H */
